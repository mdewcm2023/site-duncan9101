<h1>About</h1>
<p>cmsimde_site</p>
<h2>w2-w8</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EZLrP2sxF3JDqbTbEqQfQBQBCiH7SgznX6a3V03EbvpmVw?e=g4eChp">cdwin_vdi.7z</a><span> </span>(for @nfu users only)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EWHmUoI6S_lGt9l6lr1rAigB7OyGECvBqca2XvF9fxymZw?e=1OC1YL">w6 利用下列第五版可攜程式從倉儲建立網站.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EegNjb-jkRFNoKJf2dD3MQEBkrJplqtKK9g0er-DktDODg?e=IetGT3">w6 利用 token 進行改版 git push.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EV5lw40RXvNFue1Cr2sivioBuOj_QA5KzAxDMU0Mkf7z8w?e=NtOJeN">wcm_portable_w2-5.7z</a><span> </span>(下載 220MB 解開後 880MB)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EXvjttk-fBxOmauSgbw77EgBstfLmwy0w3eunU_osL2hRg?e=fampQ1">miktex_portable.7z</a><span> </span><span>(下載 168MB 解開後 968MB)</span></p>
<p>納入 Portable MiKTeX 之後的 可攜 Python 程式套件:<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Ecr0uG0UzJlBtwpYzztBupUBkUdQsQgmd9PWzfjTZBsB8w?e=zlb42j">wcm_portable_w2-4-miktex.7z</a></p>
<p>電腦輔助機械設計套件 -<span> </span><a href="https://solidedge.siemens.com/en/solutions/users/hobbyists-and-makers/">community 版 Siemens Solid Edge</a> -<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Ef9XW25wCPtCspWavfXRQkYBKeFkOnZDfMyA3Q-1DRhDNA?e=grfmFo">可攜版下載</a><span> </span>(建議在有還原卡或虛擬主機中使用, for @nfu users only)</p>
<hr/>
<p><a href="https://nfuedu.sharepoint.com/:v:/s/wcm2023/EVdigN-bvp9BoLQnMBJHW_QBvYjTxSiiAF4FYvenXUYtUQ?e=Tcj4rN">說明如何建立可攜 Python 第一步.mp4</a><span> </span>(Python, SciTE, pip)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EaCCYSDwemdEgl_YUiwNglEByPmHyHFW9CboFFS7ao1hLw?e=seZeSo">wcm_portable_w2-1.7z</a></p>
<p>為了執行 cmsimde, 需要安裝以下模組:</p>
<p>pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl</p>
<p>為了使用 git, 必須下載 portablegit:</p>
<p><a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a>  (取得 portable)</p>
<p><a href="https://git-scm.com/book/zh-tw/v2">https://git-scm.com/book/zh-tw/v2</a> (中文版 git book)</p>
<p>Windows 命令列中的常用指令:</p>
<p>cd - change directory</p>
<p>dir - show directory content</p>
<p>y:\&gt; 代表目前位於 Y 槽根目錄, 以 &gt; 作為 prompt (回應), 等待使用者輸入指令</p>
<p><span>y:\&gt;c: 表示要從 Y 切換到 C</span></p>
<p><span>cd \ 因為 "\" 代表根目錄.</span></p>
<hr/>
<p><a href="https://nfuedu.sharepoint.com/:v:/s/wcm2023/EZNog084xGJEuyfPk_zQchEBzyGhwXRAs5cuWsAScLMDFQ?e=85DhLj">說明如何利用 pip 安裝 cmimse 所需模組.mp4</a>, 並下載<span> </span><a href="https://git-scm.com/download/win">portablegit</a><span> </span>以及指定<span> </span><a href="https://github.com/mdewcm2023">site</a><span> </span>作業 (取得作業連結請參考 Team 中的連結)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EXQljJw1yE9At9MDkIklVFAB9Ef3q59sTJnbRiVWOSSGdw?e=AtNFlJ">wcm_portable_w2-2.7z</a></p>
<h2>w3</h2>
<p>Windows 利用 Ctrl + Shift + Esc 帶出工作管理員中的效能, 可以檢視電腦硬體與網路的運作狀況.</p>
<p>檢查電腦 services, 開始 -&gt; 滑鼠右鍵帶出電腦管理 -&gt; 服務與應用程式 可以查看電腦目前所設定或啟動的 services</p>
<p>從上述第二版可攜 Python 轉進第三版:</p>
<p>進行下列修改:</p>
<ol>
<li>建立 home_ipv6 目錄下的 DeskTop 目錄 (與 AppData 接受程式執行時的暫存檔案)</li>
<li>編輯 python.properties 將 line 153 改為: python.command=pythonw</li>
<li>編輯 SciTEGlobal.properties 將 line 162 改為: load.on.activate=1 (若編輯中的檔案在其他應用程式修 改後, 可直接在 SciTE 中自動 load.</li>
<li>編輯 SciTEGlobal.properties 將 line 204 改為: tabsize=4</li>
<li>編輯 SciTEGlobal.properties 將 line 205 改為: indent.size=4</li>
<li>編輯 SciTEGlobal.properties 將 line 335 # 拿掉 (code.page=65001, 表示編輯區使用 UTF-8 編碼)</li>
<li>編輯 SciTEGlobal.properties 將 line 336 以 # 蓋掉 (code.page=0, 表示要用系統的中文編碼, 也就是 big-5)</li>
</ol>
<p>修改之後的可攜 Python:<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ESbmgwyK-5xGj9A18njOsXoBOmk8gsB0317yaUD3jnK2wQ?e=oOsAnr">wcm_portable_w2-3.7z</a></p>
<hr/>
<p>學號@gm.nfu.edu.tw 為 Gmail 系統, 目前學校已經將此電子郵箱落日, 新生已經不再發送此 @gm 的郵箱.</p>
<p>學號@nfu.edu.tw 為 Mail 2000 系統,  可以從<span> </span><a href="https://mail.nfu.edu.tw/">https://mail.nfu.edu.tw</a><span> </span>以個人學號及自行設定的密碼登入.</p>
<p>上述兩種教育版的電子信箱 (都有 nfu.edu.tw 符號名稱), 都可以從<span> </span><a href="https://www.microsoft.com/zh-tw/education/products/office">https://www.microsoft.com/zh-tw/education/products/office</a><span> </span>登記 onedrive 帳號, 個取得 5T 雲端容量.</p>
<p>但 wcm2023 Teams 只支援 @nfu 帳號登入, 且登入後, 可以透過 MS Teams: sblk6ao (for @nfu users only) 進入網際內容管理團隊上課.</p>
<hr/>
<p>有關學員學號與 github 帳號的對應資料存入<span> </span><a href="https://github.com/mdecycu/studlist">https://github.com/mdecycu/studlist</a>, 網頁位於:<span> </span><a href="https://mde.tw/studlist/2023spring/1a.txt">https://mde.tw/studlist/2023spring/1a.txt</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ef5iQXdMRuBKgLDfRVO_SZUB5fFBsycGgl8hNX9yZf5pAQ?e=FaAGir">四技第四週進度提醒.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYbip3FksIpJihrIQqTVNB4BhvQZKoL3Fxu4RiRTECWdQQ?e=AEaVel">四技第四週第二部影片 - cmsimde 網站建立.mp4</a></p>
<h2>w5</h2>
<p>w5 進度</p>
<ol>
<li>建立 1a 學員<span> </span><a href="https://exam.cycu.org/">https://exam.cycu.org</a> 考試帳號</li>
<li>提供 Solid Edge 2023 <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Ef9XW25wCPtCspWavfXRQkYBKeFkOnZDfMyA3Q-1DRhDNA?e=grfmFo">可攜版下載</a><span><span> (for @nfu users only)</span></span></li>
<li>在個人 site-github帳號 網頁中寫 Brython 程式</li>
<li>如何在 stud2.cycu.org 中配置個人的動態網站</li>
</ol>
<p>可以使用電腦輔助設計室中 C:\2021_cadlab_portable 的程式系統, 雙點擊 start_ipv6.bat, 啟動後, 檢查是否符合執行 cmsimde 網站.</p>
<p>cmsimde 倉儲網址: <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> </p>
<p>原先電腦輔助設計室的 Wifi: 801WIFI 並沒有將 IPv4 與 IPv6 協定同時啟用, 目前已經修改, 因此只要在 Wifi 連線後, 將其對應的雙協定啟用後, 將可取得 192.168.50.X 與 2001:288:6004:17:: 等兩組 IP, 同時以 IPv4 與 IPv6 網路協定上網.</p>
<p>利用 cmsimde 將個人的倉儲轉為可動態啟動網站, 也可將動態網站內容轉為靜態網站的步驟:</p>
<ol>
<li>github 上的倉儲必須先設定 Github Pages, 將主倉儲設為網站的根目錄.</li>
<li>將倉儲 git clone 到近端後, 必須將 cmsimde 倉儲內容放入個人倉儲中, 且目錄名稱必須為 cmsimde, 同時將 cmsimde 中 up_dir 的目錄內容複製到個人倉儲的根目錄.</li>
<li>由於上述兩個動作, 近端倉儲設定好 cmsimde 動態與靜態網站架構後, 必須擁有修改遠端倉儲的權限, 而此權限, 可以透過 github 帳號下的 token 或 SSH 協定進行配置, 若採 token, 取得管理倉儲的權限, 則該 token 必須在有效期間內, 具備管理 repo 的權限. 若採 SSH,  則近端 session 對應必須設定與 github 上公鑰對應的私鑰. token 取得後, 必須放到倉儲 .git 目錄中 config 檔案裡的 url 連結, 也就是放在 https:// 之後, github.com 之前, 且在 token 與 github.com 中間加上 @ 符號.</li>
<li>當個人倉儲中的 cmsimde 放入, 且 up_dir 目錄取出到倉儲根目錄後, 使用者在可攜程式環境中的命令列, 就可以 cd 進入個人倉儲目錄後, 執行 cms.bat 執行動態網站, 之後用瀏覽器連結, 以 admin 共用密碼登入管理.</li>
<li>當使用者利用動態網站管理內容後, 可利用 generate_pages 將動態網站轉為靜態網站內容後, 以 acp 按鈕加上提交訊息, 將改版資料送到 github.com, 但需事先設定好可攜系統中 home_ipv6 目錄裡的 .gitconfig, 其內容包含 user.name 與 user.email 等內容, 以便用於 git commit 之提交身分綁定.</li>
</ol>
<p></p>
<h2>W9</h2>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;h1&gt;w9平均成績&lt;/h1&gt;
&lt;p&gt;&lt;span&gt;這是各個學員的平均成績程式:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript" src="https://unpkg.com/three@0.144.0/build/three.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- &lt;script&gt;
  MathJax = {
    tex: {inlineMath: [['$', '$'], ['\(', '\)']]}
  };
  &lt;/script&gt;
  &lt;script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"&gt;&lt;/script&gt;--&gt;
&lt;p&gt;&lt;/p&gt;
&lt;pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"&gt;# Example data for five tests
url1 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw5.txt"
url2 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6.txt"
url3 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6-2.txt"
url4 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/075c06b2baf1bb07665f1a98e9f88f7e81ebe1a4/1aw8.txt"
url5 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw9.txt"

'''
test1 = ["12345:80", "67890:70"]
test2 = ["12345:85", "67890:75"]
test3 = ["12345:90", "67890:80"]
test4 = ["12345:95", "67890:85"]
test5 = ["12345:100", "67890:90"]
'''
test1 = open(url1).read().split("\n")[1:]
test2 = open(url2).read().split("\n")[1:]
test3 = open(url3).read().split("\n")[1:]
test4 = open(url4).read().split("\n")[1:]
test5 = open(url5).read().split("\n")[1:]


# Create a dictionary to store the student numbers and their test scores
student_scores = {}

# Iterate over the data for each test
for test_data in [test1, test2, test3, test4, test5]:
    # Iterate over the data for this test
    for item in test_data:
        # Split the item into its components
        student_number, score = item.split(":")

        # Convert the score to an integer
        try:
            score = int(score)
        except:
            score = 0

        # Add the score to the list of scores for this student
        if student_number not in student_scores:
            student_scores[student_number] = []
        student_scores[student_number].append(score)

# Calculate the average score for each student
for student_number, scores in student_scores.items():
    average_score = int(sum(scores) / len(scores))
    print(f"{student_number}的期中平均成績 {average_score}")&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;// &lt;![CDATA[
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;div id="brython_div"&gt;&lt;/div&gt;
&lt;p&gt;
&lt;script type="text/python"&gt;// &lt;![CDATA[
from browser import html, document
brython_div = document["brython_div"]
# Example data for five tests
url1 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw5.txt"
url2 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6.txt"
url3 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6-2.txt"
url4 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/075c06b2baf1bb07665f1a98e9f88f7e81ebe1a4/1aw8.txt"
url5 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw9.txt"
 
'''
test1 = ["12345:80", "67890:70"]
test2 = ["12345:85", "67890:75"]
test3 = ["12345:90", "67890:80"]
test4 = ["12345:95", "67890:85"]
test5 = ["12345:100", "67890:90"]
'''
test1 = open(url1).read().split("\n")[1:]
test2 = open(url2).read().split("\n")[1:]
test3 = open(url3).read().split("\n")[1:]
test4 = open(url4).read().split("\n")[1:]
test5 = open(url5).read().split("\n")[1:]
 
 
# Create a dictionary to store the student numbers and their test scores
student_scores = {}
 
# Iterate over the data for each test
for test_data in [test1, test2, test3, test4, test5]:
    # Iterate over the data for this test
    for item in test_data:
        # Split the item into its components
        student_number, score = item.split(":")
 
        # Convert the score to an integer
        try:
            score = int(score)
        except:
            score = 0
 
        # Add the score to the list of scores for this student
        if student_number not in student_scores:
            student_scores[student_number] = []
        student_scores[student_number].append(score)
 
# Calculate the average score for each student
for student_number, scores in student_scores.items():
    average_score = int(sum(scores) / len(scores))
    print(f"{student_number}的期中平均成績 {average_score}")
    brython_div &lt;= student_number
    brython_div &lt;= ":"
    brython_div &lt;= average_score
    brython_div &lt;= html.BR()

brython_div &lt;= data
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;</pre>
<p></p>
<h2>W11</h2>
<p>如何利用可攜程式系統設定 OBS:</p>
<p>使用 Sharepoint server embed html (需登入)</p>
<h2>W13</h2>
<p>在 stud2 主機上以 wsgi 執行動態網站, 以 nginx serve 靜態網站:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EW6xYokgCRFHg7WXquEfFD4BNa43opTIFiCRN8y1_9QPig?e=AdwXfT">stud2 主機上的動態與靜態網站 serving.mp4</a><span> </span>(在無 IPv6 網路協定支援情況下, 利用 Putty 設定代理)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EdtQf3GoNp5PgQz_VOmTtjMBYOSl-ZkYNoP3dSl4glGJkw?e=A2HbwR">以 demo2 為示範帳號, 將 resume-scrum-1 倉儲內容送到 stud2 建立靜態網站.mp4</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ESE0w-u5tHpHoNLQSZgxacwBbJpcBoNd4l_i6oHNSl4jZQ?e=kYcUL6">使用 vi 編輯 server.py 放入各自的 9 字頭埠號後, 就可以用 hupper3 -m server.py 測試.mp4</a></p>
<p>下載<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ES2vox9RoINKjZwpBDMaLTcBp2iDSJ5kcnyOe7wTcX66JQ?e=i5OKhf">putty 0.78.7z</a></p>
<p>在 stud2 主機建立倉儲的動態系統:</p>
<p>ssh<span> </span><a href="mailto:demo2@stud2.cycu.org">demo2@stud2.cycu.org</a> 登入後, 以 ssh-keygen 在 .ssh 目錄下建立 id_rsa,<span> </span><span>id_rsa.pub</span></p>
<p>.ssh/config:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_53597">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">Host github.com</code></div>
<div class="line number2 index1 alt1"><code class="js plain">User git</code></div>
<div class="line number3 index2 alt2"><code class="js plain">Hostname github.com</code></div>
<div class="line number4 index3 alt1"><code class="js plain">ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>sftp<span> </span><a href="mailto:demo2@stud2.cycu.org">demo2@stud2.cycu.org</a> 登入後, cd .ssh 然後以 put<span> </span><span>config</span><span> </span>將代理主機的設定檔案送到 stud2 帳號下的 .ssh 目錄, 使用 get id_rsa.pub 將公鑰取下, 然後以 SciTE 編輯器打開後, 將公鑰內容送到 Github 帳號下的 settings 中的 SSH and GPG 設定區.</p>
<p>完成上述設定後, 以 SSH 協定取下倉儲:</p>
<p>ssh 登入帳號後, 在所在目錄 /home/帳號/, 以 git clone<span> </span><a href="mailto:git@github.com:wcm2023">git@github.com:wcm2023</a>/倉儲名稱.git repo</p>
<p>cd repo</p>
<p>利用以下指令, 將 acp 設為 user 可以執行 (Execute):</p>
<p>chmod u+x acp</p>
<p>以 sftp get 取下 repo 目錄下的 waitress_server.py</p>
<p>在 Windows 編輯 waitress_server.py, 之後存為 server.py, 再送回 repo 目錄下.</p>
<p>編輯過程在填入個人帳號所配發的 9 字頭的埠號.</p>
<p>ssh 遠端登入到 repo 目錄下, 執行 hupper3 -m server.py 測試是否已經以<span> </span><a href="https://stud2.cycu.org/">https://stud2.cycu.org:</a>8字頭的埠號. 若可以連結, 必須馬上更改登入密碼</p>
<h2>W15</h2>
<p>希望採全雲端的方式建立 github pages 網站</p>
<ol>
<li>近端 (可攜 localhost, add commit 無需上網), 中端 (stud2 主機上, 與 Github 互動, 仍受到上傳檔案容量限制 (free account)) &gt; 雲端啟用動態網站編輯網頁內容 (受限於 Replit 所提供的服務, cpu, ram, disk)</li>
<li>登入 gmail 帳號 -&gt;<span> </span><a href="https://replit.com/">https://replit.com</a></li>
<li>在 Replit 中建立 Repl -&gt; 選用 Python template -&gt; 將專案命名為 w15</li>
<li>在 Shell 頁面輸入 git version</li>
<li>git init</li>
<li>git branch -m main</li>
<li>git submodule add https://github.com/mdecycu/cmsimde.git cmsimde</li>
<li>利用下列指令, 將 cmsimde 目錄中的 up_dir 內全部資料複製到專案根目錄</li>
<li>確認目前位於根目錄</li>
<li>cp -R ./cmsimde/up_dir/* ./</li>
<li>建立 .gitignore  將 venv, config/config, __pycache__ 等靜態網站無關的檔案讓他留在 Replit</li>
<li>此時按下 Run -&gt; 根據 .replit 中的設定, 利用 python3 執行 main.py</li>
<li>顯示出 Replit 內建的 Python3 環境並沒有執行 cmsimde 所需的模組</li>
<li>pip install flask flask_cors bs4 lxml pelican markdown gevent</li>
<li>所需模組安裝後, 就可以按下 Run 執行 main.py, 啟動後, 將網址複製到瀏覽器登入更改密碼</li>
<li>git remote add origin<span> </span><a href="https://github.com/scrum-3/w15.git">https://github.com/scrum-3/w15.git</a></li>
<li>將能夠維護 repo 權限的 token 放到 .git/config 與 origin 對應的 url</li>
<li>建立一個忽略 venv, config/config 以及  __Pycache__ 等目錄及無用的檔案</li>
<li>git push -u origin main<br/><br/></li>
</ol>
<p>.gitignore 內容:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_83339">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor"># Byte-compiled</code></div>
<div class="line number2 index1 alt1"><code class="js plain">__pycache__/</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor"># for Replit, do not use the embedded venv Python</code></div>
<div class="line number4 index3 alt1"><code class="js plain">venv/</code></div>
<div class="line number5 index4 alt2"><code class="js plain">config/config</code></div>
<div class="line number6 index5 alt1"><code class="js plain">.DS_Store</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<h2>W16</h2>
<ol>
<li>登入 github.com</li>
<li>連結到<span> </span><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a>, 以此倉儲作為 Template 建立一個新倉儲 (只有 cmsimde 目錄, 並不將其作為子目錄, 好處是可以自行更動 cmsimde 內容, 壞處為要自行更新 cmsimde).</li>
<li>連結到<span> </span><a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a>, 以此倉儲作為 Template 建立一個新倉儲 (以 cmsimde 作為子模組, 好處為可利用 cd cmsimde, git pull origin master 完成與 cmsimde 官網內容同步, 壞處為不可任意修改 cmsimde 目錄中的資料).</li>
<li>回到 Replit, 建立新的 Repl 時, 利用 Import from Github 建立新專案 (w16), 必須確定從 Replit 進入 Github 維護倉儲內容的權限許可. (若無授權則無法 Import from Github)</li>
<li>開啟 Repllit 專案中的隱藏檔案檢視, 然後查看 .replit 是否以 main.py 作為 entry point, 且 main.py 內容如下:</li>
<li>並且進入 Shell 頁面 (等同 Windows 的 cmd 命令列視窗) 利用 pip install flask flask_cors bs4 lxml pelican markdown gevent 安裝執行 cmsimde 動態網站所需要的 Python 模組, flask 與 flask_cors 為網際框架, bs4 與 lxml 為頁面分頁所需模組, pelican 與 markdown 則用於建立網誌, gevent 則用於啟動 main.py.</li>
<li>按下 Run 執行 main.py, 就可以看到動態網站已經啟動.</li>
<li>若更新動態網站內容後, 用 Generate_pages 轉為靜態, 必須在 Git Tools 中執行 git add . 與 git commit -m, 最後才進入 Shell 以 git push 將改版內容推向對應的 Github 倉儲.</li>
</ol>
<p>main.py 內容:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_406066">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">from</code> <code class="py plain">cmsimde </code><code class="py keyword">import</code> <code class="py plain">flaskapp</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">gevent.pywsgi </code><code class="py keyword">import</code> <code class="py plain">WSGIServer</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="py comments">#flaskapp.app.run(host="0.0.0.0", debug=True)</code></div>
<div class="line number5 index4 alt2"><code class="py plain">http_server </code><code class="py keyword">=</code> <code class="py plain">WSGIServer((</code><code class="py string">'0.0.0.0'</code><code class="py plain">, </code><code class="py value">8080</code><code class="py plain">), flaskapp.app)</code></div>
<div class="line number6 index5 alt1"><code class="py plain">http_server.serve_forever()</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>若要修改網站標題, 可以編輯 init.py 後重新開啟後才能生效.</p>
<p>init.py 內容:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_695974">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">import</code> <code class="py plain">os</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="py comments">"""CMSimfly Initialization setup</code></div>
<div class="line number4 index3 alt1"><code class="py comments">"""</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py comments"># get current directory, on Windows, back slash at the end of the directory</code></div>
<div class="line number7 index6 alt2"><code class="py plain">_curdir </code><code class="py keyword">=</code> <code class="py plain">os.path.join(os.getcwd(), os.path.dirname(__file__))</code></div>
<div class="line number8 index7 alt1"><code class="py comments"># config directory</code></div>
<div class="line number9 index8 alt2"><code class="py plain">config_dir </code><code class="py keyword">=</code> <code class="py plain">_curdir </code><code class="py keyword">+</code> <code class="py string">"/config/"</code></div>
<div class="line number10 index9 alt1"><code class="py keyword">class</code> <code class="py plain">Init(</code><code class="py functions">object</code><code class="py plain">):</code></div>
<div class="line number11 index10 alt2"><code class="py spaces">    </code><code class="py comments"># uwsgi as static class variable, can be accessed by Init.uwsgi</code></div>
<div class="line number12 index11 alt1"><code class="py spaces">    </code><code class="py plain">uwsgi </code><code class="py keyword">=</code> <code class="py color1">False</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">    </code><code class="py plain">site_title </code><code class="py keyword">=</code> <code class="py string">"w16"</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">    </code><code class="py plain">ip </code><code class="py keyword">=</code> <code class="py string">"127.0.0.1"</code></div>
<div class="line number15 index14 alt2"><code class="py spaces">    </code><code class="py plain">dynamic_port </code><code class="py keyword">=</code> <code class="py value">9445</code></div>
<div class="line number16 index15 alt1"><code class="py spaces">    </code><code class="py plain">static_port </code><code class="py keyword">=</code> <code class="py value">8445</code></div>
<div class="line number17 index16 alt2"><code class="py spaces">    </code><code class="py keyword">def</code> <code class="py plain">__init__(</code><code class="py color1">self</code><code class="py plain">):</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">        </code><code class="py comments"># hope to create downloads and images directories　</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py keyword">not</code> <code class="py plain">os.path.isdir(_curdir </code><code class="py keyword">+</code> <code class="py string">"/downloads"</code><code class="py plain">):</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">            </code><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">                </code><code class="py plain">os.makedirs(_curdir </code><code class="py keyword">+</code> <code class="py string">"/downloads"</code><code class="py plain">)</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">            </code><code class="py keyword">except</code><code class="py plain">:</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">                </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"mkdir error"</code><code class="py plain">)</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">        </code><code class="py keyword">if</code> <code class="py keyword">not</code> <code class="py plain">os.path.isdir(_curdir </code><code class="py keyword">+</code> <code class="py string">"/images"</code><code class="py plain">):</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">            </code><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">                </code><code class="py plain">os.makedirs(_curdir </code><code class="py keyword">+</code> <code class="py string">"/images"</code><code class="py plain">)</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">            </code><code class="py keyword">except</code><code class="py plain">:</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">                </code><code class="py functions">print</code><code class="py plain">(</code><code class="py string">"mkdir error"</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>