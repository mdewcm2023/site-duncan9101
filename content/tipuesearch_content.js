var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsimde_site \n', 'tags': '', 'url': 'About.html'}, {'title': 'w2-w8', 'text': 'cdwin_vdi.7z \xa0 (for @nfu users only) \n w6 利用下列第五版可攜程式從倉儲建立網站.mp4 \n w6 利用 token 進行改版 git push.mp4 \n wcm_portable_w2-5.7z \xa0 (下載 220MB 解開後 880MB) \n miktex_portable.7z \xa0 (下載 168MB 解開後 968MB) \n 納入 Portable MiKTeX 之後的 可攜 Python 程式套件: \xa0 wcm_portable_w2-4-miktex.7z \n 電腦輔助機械設計套件 - \xa0 community 版 Siemens Solid Edge \xa0- \xa0 可攜版下載 \xa0 (建議在有還原卡或虛擬主機中使用, for @nfu users only) \n \n 說明如何建立可攜 Python 第一步.mp4 \xa0 (Python, SciTE, pip) \n wcm_portable_w2-1.7z \n 為了執行 cmsimde, 需要安裝以下模組: \n pip install flask flask_cors bs4 lxml pelican markdown leo pyopenssl \n 為了使用 git, 必須下載 portablegit: \n https://git-scm.com/download/win \xa0 (取得 portable) \n https://git-scm.com/book/zh-tw/v2 \xa0(中文版 git book) \n Windows 命令列中的常用指令: \n cd - change directory \n dir - show directory content \n y:\\> 代表目前位於 Y 槽根目錄, 以 > 作為 prompt (回應), 等待使用者輸入指令 \n y:\\>c: 表示要從 Y 切換到 C \n cd \\ 因為 "\\" 代表根目錄. \n \n 說明如何利用 pip 安裝 cmimse 所需模組.mp4 , 並下載 \xa0 portablegit \xa0 以及指定 \xa0 site \xa0 作業 (取得作業連結請參考 Team 中的連結) \n wcm_portable_w2-2.7z \n', 'tags': '', 'url': 'w2-w8.html'}, {'title': 'w3', 'text': 'Windows 利用 Ctrl + Shift + Esc 帶出工作管理員中的效能, 可以檢視電腦硬體與網路的運作狀況. \n 檢查電腦 services, 開始 -> 滑鼠右鍵帶出電腦管理 -> 服務與應用程式 可以查看電腦目前所設定或啟動的 services \n 從上述第二版可攜 Python 轉進第三版: \n 進行下列修改: \n \n 建立 home_ipv6 目錄下的 DeskTop 目錄 (與 AppData 接受程式執行時的暫存檔案) \n 編輯 python.properties 將 line 153 改為: python.command=pythonw \n 編輯 SciTEGlobal.properties 將 line 162 改為: load.on.activate=1 (若編輯中的檔案在其他應用程式修 改後, 可直接在 SciTE 中自動 load. \n 編輯 SciTEGlobal.properties 將 line 204 改為: tabsize=4 \n 編輯 SciTEGlobal.properties 將 line 205 改為: indent.size=4 \n 編輯 SciTEGlobal.properties 將 line 335 # 拿掉 (code.page=65001, 表示編輯區使用 UTF-8 編碼) \n 編輯 SciTEGlobal.properties 將 line 336 以 # 蓋掉 (code.page=0, 表示要用系統的中文編碼, 也就是 big-5) \n \n 修改之後的可攜 Python: \xa0 wcm_portable_w2-3.7z \n \n 學號@gm.nfu.edu.tw 為 Gmail 系統, 目前學校已經將此電子郵箱落日, 新生已經不再發送此 @gm 的郵箱. \n 學號@nfu.edu.tw 為 Mail 2000 系統,\xa0 可以從 \xa0 https://mail.nfu.edu.tw \xa0 以個人學號及自行設定的密碼登入. \n 上述兩種教育版的電子信箱 (都有 nfu.edu.tw 符號名稱), 都可以從 \xa0 https://www.microsoft.com/zh-tw/education/products/office \xa0 登記 onedrive 帳號, 個取得 5T 雲端容量. \n 但 wcm2023 Teams 只支援 @nfu 帳號登入, 且登入後, 可以透過 MS Teams:\xa0sblk6ao (for @nfu users only) 進入網際內容管理團隊上課. \n \n 有關學員學號與 github 帳號的對應資料存入 \xa0 https://github.com/mdecycu/studlist , 網頁位於: \xa0 https://mde.tw/studlist/2023spring/1a.txt \n 四技第四週進度提醒.mp4 \n 四技第四週第二部影片 - cmsimde 網站建立.mp4 \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w5', 'text': 'w5 進度 \n \n 建立 1a 學員 \xa0 https://exam.cycu.org \xa0考試帳號 \n 提供 Solid Edge 2023\xa0 可攜版下載 \xa0(for @nfu users only) \n 在個人 site-github帳號 網頁中寫 Brython 程式 \n 如何在 stud2.cycu.org 中配置個人的動態網站 \n \n 可以使用電腦輔助設計室中\xa0C:\\2021_cadlab_portable 的程式系統, 雙點擊 start_ipv6.bat, 啟動後, 檢查是否符合執行 cmsimde 網站. \n cmsimde 倉儲網址:\xa0 https://github.com/mdecycu/cmsimde \xa0 \n 原先電腦輔助設計室的 Wifi: 801WIFI 並沒有將 IPv4 與 IPv6 協定同時啟用, 目前已經修改, 因此只要在 Wifi 連線後, 將其對應的雙協定啟用後, 將可取得 192.168.50.X 與 2001:288:6004:17:: 等兩組 IP, 同時以 IPv4 與 IPv6 網路協定上網. \n 利用 cmsimde 將個人的倉儲轉為可動態啟動網站, 也可將動態網站內容轉為靜態網站的步驟: \n \n github 上的倉儲必須先設定 Github Pages, 將主倉儲設為網站的根目錄. \n 將倉儲 git clone 到近端後, 必須將 cmsimde 倉儲內容放入個人倉儲中, 且目錄名稱必須為 cmsimde, 同時將 cmsimde 中 up_dir 的目錄內容複製到個人倉儲的根目錄. \n 由於上述兩個動作, 近端倉儲設定好 cmsimde 動態與靜態網站架構後, 必須擁有修改遠端倉儲的權限, 而此權限, 可以透過 github 帳號下的 token 或 SSH 協定進行配置, 若採 token, 取得管理倉儲的權限, 則該 token 必須在有效期間內, 具備管理 repo 的權限. 若採 SSH,\xa0 則近端 session 對應必須設定與 github 上公鑰對應的私鑰. token 取得後, 必須放到倉儲 .git 目錄中 config 檔案裡的 url 連結, 也就是放在 https:// 之後, github.com 之前, 且在 token 與 github.com 中間加上 @ 符號. \n 當個人倉儲中的 cmsimde 放入, 且 up_dir 目錄取出到倉儲根目錄後, 使用者在可攜程式環境中的命令列, 就可以 cd 進入個人倉儲目錄後, 執行 cms.bat 執行動態網站, 之後用瀏覽器連結, 以 admin 共用密碼登入管理. \n 當使用者利用動態網站管理內容後, 可利用 generate_pages 將動態網站轉為靜態網站內容後, 以 acp 按鈕加上提交訊息, 將改版資料送到 github.com, 但需事先設定好可攜系統中 home_ipv6 目錄裡的 .gitconfig, 其內容包含 user.name 與 user.email 等內容, 以便用於 git commit 之提交身分綁定. \n \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'W9', 'text': '<h1>w9平均成績</h1>\n<p><span>這是各個學員的平均成績程式:</span></p>\n<p>\n<script type="text/javascript" src="https://unpkg.com/three@0.144.0/build/three.js"></script>\n</p>\n<!-- <script>\n  MathJax = {\n    tex: {inlineMath: [[\'$\', \'$\'], [\'\\(\', \'\\)\']]}\n  };\n  </script>\n  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js"></script>-->\n<p></p>\n<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Example data for five tests\nurl1 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw5.txt"\nurl2 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6.txt"\nurl3 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6-2.txt"\nurl4 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/075c06b2baf1bb07665f1a98e9f88f7e81ebe1a4/1aw8.txt"\nurl5 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw9.txt"\n\n\'\'\'\ntest1 = ["12345:80", "67890:70"]\ntest2 = ["12345:85", "67890:75"]\ntest3 = ["12345:90", "67890:80"]\ntest4 = ["12345:95", "67890:85"]\ntest5 = ["12345:100", "67890:90"]\n\'\'\'\ntest1 = open(url1).read().split("\\n")[1:]\ntest2 = open(url2).read().split("\\n")[1:]\ntest3 = open(url3).read().split("\\n")[1:]\ntest4 = open(url4).read().split("\\n")[1:]\ntest5 = open(url5).read().split("\\n")[1:]\n\n\n# Create a dictionary to store the student numbers and their test scores\nstudent_scores = {}\n\n# Iterate over the data for each test\nfor test_data in [test1, test2, test3, test4, test5]:\n    # Iterate over the data for this test\n    for item in test_data:\n        # Split the item into its components\n        student_number, score = item.split(":")\n\n        # Convert the score to an integer\n        try:\n            score = int(score)\n        except:\n            score = 0\n\n        # Add the score to the list of scores for this student\n        if student_number not in student_scores:\n            student_scores[student_number] = []\n        student_scores[student_number].append(score)\n\n# Calculate the average score for each student\nfor student_number, scores in student_scores.items():\n    average_score = int(sum(scores) / len(scores))\n    print(f"{student_number}的期中平均成績 {average_score}")</pre>\n<p><br><br></p>\n<!-- 導入 brython 程式庫 -->\n<p>\n<script src="./../cmsimde/static/brython.js"></script>\n<script src="./../cmsimde/static/brython_stdlib.js"></script>\n</p>\n<!-- 啟動 Brython -->\n<p>\n<script>// <![CDATA[\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n// ]]></script>\n</p>\n<div id="brython_div"></div>\n<p>\n<script type="text/python">// <![CDATA[\nfrom browser import html, document\nbrython_div = document["brython_div"]\n# Example data for five tests\nurl1 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw5.txt"\nurl2 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6.txt"\nurl3 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw6-2.txt"\nurl4 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/075c06b2baf1bb07665f1a98e9f88f7e81ebe1a4/1aw8.txt"\nurl5 = "https://gist.githubusercontent.com/mdecycu/07f0f0817115a68d55d6ca603c5ab393/raw/239f4eb84715978daead6ac1f231af7f190a2a5e/1aw9.txt"\n \n\'\'\'\ntest1 = ["12345:80", "67890:70"]\ntest2 = ["12345:85", "67890:75"]\ntest3 = ["12345:90", "67890:80"]\ntest4 = ["12345:95", "67890:85"]\ntest5 = ["12345:100", "67890:90"]\n\'\'\'\ntest1 = open(url1).read().split("\\n")[1:]\ntest2 = open(url2).read().split("\\n")[1:]\ntest3 = open(url3).read().split("\\n")[1:]\ntest4 = open(url4).read().split("\\n")[1:]\ntest5 = open(url5).read().split("\\n")[1:]\n \n \n# Create a dictionary to store the student numbers and their test scores\nstudent_scores = {}\n \n# Iterate over the data for each test\nfor test_data in [test1, test2, test3, test4, test5]:\n    # Iterate over the data for this test\n    for item in test_data:\n        # Split the item into its components\n        student_number, score = item.split(":")\n \n        # Convert the score to an integer\n        try:\n            score = int(score)\n        except:\n            score = 0\n \n        # Add the score to the list of scores for this student\n        if student_number not in student_scores:\n            student_scores[student_number] = []\n        student_scores[student_number].append(score)\n \n# Calculate the average score for each student\nfor student_number, scores in student_scores.items():\n    average_score = int(sum(scores) / len(scores))\n    print(f"{student_number}的期中平均成績 {average_score}")\n    brython_div <= student_number\n    brython_div <= ":"\n    brython_div <= average_score\n    brython_div <= html.BR()\n\nbrython_div <= data\n// ]]></script>\n</p> \n \n', 'tags': '', 'url': 'W9.html'}, {'title': 'W11', 'text': '如何利用可攜程式系統設定 OBS: \n 使用 Sharepoint server embed html (需登入) \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W13', 'text': '在 stud2 主機上以 wsgi 執行動態網站, 以 nginx serve 靜態網站: \n stud2 主機上的動態與靜態網站 serving.mp4 \xa0 (在無 IPv6 網路協定支援情況下, 利用 Putty 設定代理) \n 以 demo2 為示範帳號, 將 resume-scrum-1 倉儲內容送到 stud2 建立靜態網站.mp4 \n 使用 vi 編輯 server.py 放入各自的 9 字頭埠號後, 就可以用 hupper3 -m server.py 測試.mp4 \n 下載 \xa0 putty 0.78.7z \n 在 stud2 主機建立倉儲的動態系統: \n ssh \xa0 demo2@stud2.cycu.org \xa0登入後, 以 ssh-keygen 在 .ssh 目錄下建立 id_rsa, \xa0 id_rsa.pub \n .ssh/config: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n Host github.com \n User git \n Hostname github.com \n ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n \n \n \n \n \n \n \n sftp \xa0 demo2@stud2.cycu.org \xa0登入後, cd .ssh 然後以 put \xa0 config \xa0 將代理主機的設定檔案送到 stud2 帳號下的 .ssh 目錄, 使用 get id_rsa.pub 將公鑰取下, 然後以 SciTE 編輯器打開後, 將公鑰內容送到 Github 帳號下的 settings 中的 SSH and GPG 設定區. \n 完成上述設定後, 以 SSH 協定取下倉儲: \n ssh 登入帳號後, 在所在目錄 /home/帳號/, 以 git clone \xa0 git@github.com:wcm2023 /倉儲名稱.git repo \n cd repo \n 利用以下指令, 將 acp 設為 user 可以執行 (Execute): \n chmod u+x acp \n 以 sftp get 取下 repo 目錄下的 waitress_server.py \n 在 Windows 編輯 waitress_server.py, 之後存為 server.py, 再送回 repo 目錄下. \n 編輯過程在填入個人帳號所配發的 9 字頭的埠號. \n ssh 遠端登入到 repo 目錄下, 執行 hupper3 -m server.py 測試是否已經以 \xa0 https://stud2.cycu.org: 8字頭的埠號. 若可以連結, 必須馬上更改登入密碼 \n', 'tags': '', 'url': 'W13.html'}, {'title': 'W15', 'text': '希望採全雲端的方式建立 github pages 網站 \n \n 近端 (可攜 localhost, add commit 無需上網), 中端 (stud2 主機上, 與 Github 互動, 仍受到上傳檔案容量限制 (free account)) > 雲端啟用動態網站編輯網頁內容 (受限於 Replit 所提供的服務, cpu, ram, disk) \n 登入 gmail 帳號 -> \xa0 https://replit.com \n 在 Replit 中建立 Repl -> 選用 Python template -> 將專案命名為 w15 \n 在 Shell 頁面輸入 git version \n git init \n git branch -m main \n git submodule add https://github.com/mdecycu/cmsimde.git cmsimde \n 利用下列指令, 將 cmsimde 目錄中的 up_dir 內全部資料複製到專案根目錄 \n 確認目前位於根目錄 \n cp -R ./cmsimde/up_dir/* ./ \n 建立 .gitignore\xa0 將 venv, config/config, __pycache__ 等靜態網站無關的檔案讓他留在 Replit \n 此時按下 Run -> 根據 .replit 中的設定, 利用 python3 執行 main.py \n 顯示出 Replit 內建的 Python3 環境並沒有執行 cmsimde 所需的模組 \n pip install flask flask_cors bs4 lxml pelican markdown gevent \n 所需模組安裝後, 就可以按下 Run 執行 main.py, 啟動後, 將網址複製到瀏覽器登入更改密碼 \n git remote add origin \xa0 https://github.com/scrum-3/w15.git \n 將能夠維護 repo 權限的 token 放到 .git/config 與 origin 對應的 url \n 建立一個忽略 venv, config/config 以及\xa0 __Pycache__ 等目錄及無用的檔案 \n git push -u origin main \n \n .gitignore 內容: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n \n \n \n # Byte-compiled \n __pycache__/ \n # for Replit, do not use the embedded venv Python \n venv/ \n config/config \n .DS_Store \n \n \n \n \n \n \n', 'tags': '', 'url': 'W15.html'}]};